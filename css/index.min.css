/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}*{-webkit-box-sizing:border-box;box-sizing:border-box}.flex{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.flex,.row{-webkit-box-direction:normal}.row{-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-line-pack:center;align-content:center;padding:0 10px}.invisible{visibility:hidden}.hidden{display:none}body{font-size:14px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:300;line-height:1.4em;background:#f5f5f5;color:#4d4d4d;min-width:230px;max-width:550px;margin:0 auto;-webkit-font-smoothing:antialiased;-moz-font-smoothing:antialiased;font-smoothing:antialiased}body h1{font-weight:100;font-size:100px;color:rgba(47,138,175,.2)}button{margin:0;padding:0;border:0;background:none;font-size:100%;font-family:inherit;font-weight:inherit;color:inherit;vertical-align:baseline;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-font-smoothing:antialiased;-moz-font-smoothing:antialiased;font-smoothing:antialiased}button,input[type=checkbox]{outline:none}#app{background:#fff;color:inherit;position:relative;width:95%;max-width:95%;border:0;-webkit-box-shadow:0 2px 4px 0 rgba(0,0,0,.2),0 25px 50px 0 rgba(0,0,0,.1);box-shadow:0 2px 4px 0 rgba(0,0,0,.2),0 25px 50px 0 rgba(0,0,0,.1)}#app .top-bar{height:55px;width:100%}#app .top-bar .check-all{width:10%}#app .top-bar .task-input{border:0;color:inherit;font-family:inherit;font-weight:inherit;font-size:24px;font-stretch:100%;width:90%;outline:none}#app .top-bar .task-input::-webkit-input-placeholder{font-style:italic;color:#e6e6e6}#app .top-bar .task-input:-ms-input-placeholder,#app .top-bar .task-input::-ms-input-placeholder{font-style:italic;color:#e6e6e6}#app .top-bar .task-input::placeholder{font-style:italic;color:#e6e6e6}#app .task-container{width:100%;border-top:1px solid #e6e6e6}#app .task-container .task{height:55px;width:100%;font-size:24px;border-bottom:1px solid #ededed}#app .task-container .task input{width:10%}#app .task-container .task label{width:82%;text-align:left}#app .task-container .task button{font-size:35px;width:8%;padding-bottom:7px;color:#cc9a9a}#app .task-container .menu{color:inherit;height:40px;width:100%;font-size:14px}#app .task-container .menu div{width:30%}#app .task-container .menu .filters{list-style-type:none;padding:0;width:40%}#app .task-container .menu .filters li{padding:0 15px}#app .task-container .menu button{text-align:right;width:30%}footer{margin-top:50px}footer p{margin:5px;line-height:1.4em;font-size:12px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
